name: CI/CD Pipeline for Book Tracker API with Keploy

on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout the code
            - name: Checkout code
              uses: actions/checkout@v4

            # Step 2: Set up Go environment
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.24

            # Step 3: Install Go dependencies
            - name: Install dependencies
              run: go mod tidy

            # Step 4: Start MySQL Docker container
            - name: Start MySQL container
              run: |
                  docker network create mysql-network
                  docker run -d \
                    --name mysql-anime-watch-list-test \
                    --network mysql-network \
                    -e MYSQL_ROOT_PASSWORD=testqwerty \
                    -e MYSQL_DATABASE=test-anime-watch-list \
                    -p 5011:3306 \
                    mysql:latest

            # Step 5: Wait for MySQL to be ready
            - name: Wait for MySQL
              run: |
                  for i in {1..30}; do
                    if docker exec mysql-anime-watch-list-test mysqladmin ping -ptestqwerty --silent; then
                      echo "MySQL is ready!"
                      break
                    fi
                    echo "Waiting for MySQL..."
                    sleep 2
                  done

            # Step 6: Run Go tests
            - name: Run Go Tests
              run: go test -v ./tests/...

            # Step 7: Install Keploy
            - name: Install Keploy
              run: curl --silent -L https://keploy.io/ent/install.sh | bash

            # Step 8: Run Keploy Test Suite
            - name: Run Keploy Test Suite
              run: |
                  keploy test-suite \
                    --app=681a05812921eade9b097454@all \
                    --base-path http://localhost:8080/books \
                    --cloud
