name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    GO_VERSION: "1.21"
    MYSQL_ROOT_PASSWORD: testqwerty
    MYSQL_DATABASE: test-anime-watch-list
    MYSQL_PORT: 3306
    API_PORT: 8080
    PROJECT_DIR: golang-watchlist

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
                    MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Install dependencies
              run: |
                  cd $PROJECT_DIR
                  go mod download

            - name: Wait for MySQL
              run: |
                  timeout 60s bash -c 'until mysqladmin ping -h 127.0.0.1 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} --silent; do sleep 1; done'

            - name: Run unit tests
              run: |
                  cd $PROJECT_DIR
                  go test ./...

    keploy:
        runs-on: ubuntu-latest
        needs: test

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
                    MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Install Keploy
              run: |
                  curl -sL "https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz" | tar xz -C /tmp
                  sudo mv /tmp/keploy /usr/local/bin

            - name: Build and Run with Keploy
              run: |
                  cd $PROJECT_DIR
                  go build -o app ./cmd/server
                  keploy test -c "./app" --delay 10 --coverage || true
