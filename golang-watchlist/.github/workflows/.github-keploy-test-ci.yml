name: Simple CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    GO_VERSION: "1.21"
    MYSQL_ROOT_PASSWORD: testpass
    MYSQL_DATABASE: test-anime-db
    MYSQL_PORT: 3306
    API_PORT: 8080

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:8
                env:
                    MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
                    MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - run: go mod tidy

            - name: Wait for MySQL
              run: |
                  for i in {1..30}; do
                    mysqladmin ping -h 127.0.0.1 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} && break
                    sleep 2
                  done

            - run: go test ./...

    keploy:
        name: Run Keploy
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - run: |
                  curl -sL https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz | tar xz -C /tmp
                  sudo mv /tmp/keploy /usr/local/bin

            - run: go build -o app ./cmd/server

            - name: Run Keploy Test
              run: |
                  ./app &
                  KILL_PID=$!
                  sleep 5

                  keploy test -c ./app --delay 5 || true
                  kill $KILL_PID || true

    docker:
        name: Docker Build
        runs-on: ubuntu-latest
        needs: [test, keploy]

        steps:
            - uses: actions/checkout@v4

            - name: Build Docker image
              run: docker build -t anime-api:latest .

            - name: (Optional) Push to Docker Hub
              if: github.ref == 'refs/heads/main'
              run: |
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                  docker tag anime-api:latest ${{ secrets.DOCKER_USERNAME }}/anime-api:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/anime-api:latest
